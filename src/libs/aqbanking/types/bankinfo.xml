
<typedefs>
  <type id="AB_BANKINFO_SERVICE_LIST" >
    <functions>
      <function type="new" name="AB_BankInfoService_List_new" />
      <function type="free" name="AB_BankInfoService_List_free" />
      <function type="dup" name="AB_BankInfoService_List_dup" />
    </functions>
  </type>
  <type id="AB_BANKINFO_SERVICE_LIST2" >
    <functions>
      <function type="new" name="AB_BankInfoService_List2_new" />
      <function type="free" name="AB_BankInfoService_List2_free" />
      <function type="dup" name="AB_BankInfoService_List2_dup" />
    </functions>
  </type>

  <type id="uint32_t" basetype="int" />

</typedefs>


<types>

  <type id="AB_BANKINFO_SERVICE" 
        prefix="AB_BankInfoService" 
        class="BankInfoService"
        access="public"
        filename="bankinfoservice"
        list="public"
        list2="public" >
    <headers>
      <header type="sys" >gwenhywfar/types.h</header>
      <header type="sys" >aqbanking/error.h</header>
    </headers>
    
    <elem name="type" type="char" ptr="1" >
      <descr>
        The following types have been registered with AqBanking:
        <ul>
          <li><b>HBCI</b> - German homebanking protocol</li>
          <li><b>EBICS</b> - German and French homebanking protocol</li>
          <li><b>OFX</b>  - OFX direct connect protocol</li>
        </ul>
      </descr>
    </elem>
    <elem name="address" type="char" ptr="1">
      <descr>
        For most services this is the URL or hostname of the server.
      </descr>
    </elem>
    <elem name="suffix" type="char" ptr="1">
      <descr>
        For IP based services this is the port to be used (if omitted
        a default value suitable for the service is chosen).
      </descr>
    </elem>
    <elem name="pversion" type="char" ptr="1">
      <descr>
        The content of this field depends on the service type.
        For <b>HBCI</b> this is the protocol version to be used:
        <ul>
          <li>2.01</li>
          <li>2.10</li>
          <li>2.20</li>
        </ul>
        
        For <b>EBICS</b> this is also the protocol version:
        <ul>
          <li>H002</li>
          <li>H003</li>
        </ul>
      </descr>
    </elem>
    <elem name="mode" type="char" ptr="1">
      <descr>
        The content of this field depends on the service type.
        For <b>HBCI</b> the following values are used:
        <ul>
          <li>DDV</li>
          <li>RDH1</li>
          <li>RDH2</li>
          <li>RDH3</li>
          <li>RDH4</li>
          <li>RDH5</li>
          <li>RDH6</li>
          <li>RDH7</li>
          <li>RDH8</li>
          <li>RDH9</li>
          <li>RDH10</li>
          <li>PINTAN</li>
        </ul>
      </descr>
    </elem>
    <elem name="userFlags" type="uint32_t">
      <descr>
        This field contains some service-dependent user flags. 
        For HBCI these are the flags of AH_USER (e.g. forceSslv3 etc).
      </descr>
    </elem>
    
    <elem name="hversion" type="char" ptr="1">
      <descr>
        For HTTP-based protocols this is the HTTP version to be
        used:
        <ul>
          <li>1.0</li>
          <li>1.1</li>
        </ul>
      </descr>
    </elem>
    <elem name="aux1" type="char" ptr="1">
      <descr>
        This is a multi purpose field to be used by a bankinfo plugin as
        it sees fit.
        OFX uses this to store the FID from the bankinfo file.
        EBICS stores the HOSTID here.
      </descr>
    </elem>
    <elem name="aux2" type="char" ptr="1">
      <descr>
        This is a multi purpose field to be used by a bankinfo plugin as
        it sees fit.
        OFX uses this to store the ORG field from the bankinfo file.
      </descr>
    </elem>

    <elem name="aux3" type="char" ptr="1">
      <descr>
        This is a multi purpose field to be used by a bankinfo plugin as
        it sees fit.
        OFX uses this to store the APPID field from the bankinfo file.
      </descr>
    </elem>

    <elem name="aux4" type="char" ptr="1">
      <descr>
        This is a multi purpose field to be used by a bankinfo plugin as
        it sees fit.
        OFX uses this to store the APPVER field from the bankinfo file.
      </descr>
    </elem>
    
  </type>


  <type id="AB_BANKINFO" 
        prefix="AB_BankInfo" 
        class="BankInfo"
        access="public"
        filename="bankinfo"
        list="public"
        list2="public" >
    <headers>
      <header type="sys" >gwenhywfar/types.h</header>
      <header type="sys" >aqbanking/error.h</header>
      <header type="sys" >aqbanking/bankinfoservice.h</header>
    </headers>
    
    <elem name="country" type="char" ptr="1" />
    <elem name="branchId" type="char" ptr="1" />
    <elem name="bankId" type="char" ptr="1" />
    <elem name="bic" type="char" ptr="1" />
    <elem name="bankName" type="char" ptr="1" />
    <elem name="location" type="char" ptr="1" />
    <elem name="street" type="char" ptr="1" />
    <elem name="zipcode" type="char" ptr="1" />
    <elem name="city" type="char" ptr="1" />
    <elem name="region" type="char" ptr="1" />
    <elem name="phone" type="char" ptr="1" />
    <elem name="fax" type="char" ptr="1" />
    <elem name="email" type="char" ptr="1" />
    <elem name="website" type="char" ptr="1" />
    <elem name="services" type="AB_BANKINFO_SERVICE_LIST" ptr="1" 
          mode="list" elemType="AB_BANKINFO_SERVICE" 
          init="1" copy="1" const="0" >
      <descr>
        This is the list of known servises of this bank.
        This object remains the owner of lists returned via
        @ref AB_BankInfo_GetServices.
      </descr>
    </elem>
  </type>
  
  
  
</types>
